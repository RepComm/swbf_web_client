<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<!-- saved from url=(0056)http://personal.riley-man.com/swbf/editing/swbf-ter.html -->
<HTML><HEAD><TITLE>Star Wars Battlefront - TER File Information</TITLE>
<META content="text/html; charset=ISO-8859-1" http-equiv=content-type>
<META name=GENERATOR content="MSHTML 8.00.6001.18812"></HEAD>
<BODY>
<DIV style="TEXT-ALIGN: center">
<H1>Star Wars: Battlefront<BR>TER File Information</H1></DIV><BR>
<H2>TER Files</H2>Terrain files, with extension *.ter, represent a single 
terrain to be used by a world.&nbsp; This file format is generated by 
ZeroEditor, and used during the munge process.<BR><BR>The data stored in terrain 
files is used to create the "tern" chunk within *.lvl files.<BR>
<H2>Data Organization</H2>Data contained in *.ter files is organized as 
follows:<BR><BR>
<TABLE style="TEXT-ALIGN: left; WIDTH: 100%" border=1 cellSpacing=0 
cellPadding=2>
  <TBODY>
  <TR>
    <TD style="BACKGROUND-COLOR: rgb(239,239,239); VERTICAL-ALIGN: top"><BIG 
      style="FONT-WEIGHT: bold">Header</BIG><BR><BR>The header is always exactly 
      2820 bytes in length.<BR><BR>
      <TABLE style="TEXT-ALIGN: left; WIDTH: 100%" border=1 cellSpacing=0 
      cellPadding=2>
        <TBODY>
        <TR>
          <TD style="VERTICAL-ALIGN: top; FONT-WEIGHT: bold">Offset<BR></TD>
          <TD 
          style="VERTICAL-ALIGN: top; FONT-WEIGHT: bold">Data&nbsp;Type<BR></TD>
          <TD 
            style="VERTICAL-ALIGN: top; FONT-WEIGHT: bold">Size&nbsp;(bytes)<BR></TD>
          <TD 
        style="VERTICAL-ALIGN: top; FONT-WEIGHT: bold">Description<BR></TD></TR>
        <TR>
          <TD 
            style="FONT-FAMILY: courier new; VERTICAL-ALIGN: top"><SMALL>0x0000<BR></SMALL></TD>
          <TD 
            style="FONT-FAMILY: courier new; VERTICAL-ALIGN: top"><SMALL>char[4]<BR></SMALL></TD>
          <TD style="TEXT-ALIGN: right; VERTICAL-ALIGN: top">4 <BR></TD>
          <TD style="VERTICAL-ALIGN: top">Terrain marker, always 
        "TERR".<BR></TD></TR>
        <TR>
          <TD 
            style="FONT-FAMILY: courier new; VERTICAL-ALIGN: top"><SMALL>0x0004<BR></SMALL></TD>
          <TD 
            style="FONT-FAMILY: courier new; VERTICAL-ALIGN: top"><SMALL>int<BR></SMALL></TD>
          <TD style="TEXT-ALIGN: right; VERTICAL-ALIGN: top">4 <BR></TD>
          <TD style="VERTICAL-ALIGN: top">32-bit integer, unknown 
            purpose.&nbsp; This appears to always be a value of 21.<BR></TD></TR>
        <TR>
          <TD 
            style="FONT-FAMILY: courier new; VERTICAL-ALIGN: top"><SMALL>0x0008<BR></SMALL></TD>
          <TD 
            style="FONT-FAMILY: courier new; VERTICAL-ALIGN: top"><SMALL>short[4]<BR></SMALL></TD>
          <TD style="TEXT-ALIGN: right; VERTICAL-ALIGN: top">8 <BR></TD>
          <TD style="VERTICAL-ALIGN: top">Four 16-bit integers that specify 
            the grid locations for the first and last row / column, compared to 
            the map center.&nbsp; I will term these values the <SPAN 
            style="FONT-STYLE: italic">Visible Grid Co-ordinates</SPAN>.<BR>(eg. 
            for a 256x256 map, these are typically -128 and +128)<BR></TD></TR>
        <TR>
          <TD 
            style="FONT-FAMILY: courier new; VERTICAL-ALIGN: top"><SMALL>0x0010<BR></SMALL></TD>
          <TD 
            style="FONT-FAMILY: courier new; VERTICAL-ALIGN: top"><SMALL>int<BR></SMALL></TD>
          <TD style="TEXT-ALIGN: right; VERTICAL-ALIGN: top">4 <BR></TD>
          <TD style="VERTICAL-ALIGN: top">32-bit integer, unknown 
            purpose.&nbsp; This appears to always be a value of 164.<BR></TD></TR>
        <TR>
          <TD 
            style="FONT-FAMILY: courier new; VERTICAL-ALIGN: top"><SMALL>0x0014<BR></SMALL></TD>
          <TD 
            style="FONT-FAMILY: courier new; VERTICAL-ALIGN: top"><SMALL>float[16]<BR></SMALL></TD>
          <TD style="TEXT-ALIGN: right; VERTICAL-ALIGN: top">64 <BR></TD>
          <TD style="VERTICAL-ALIGN: top">Sixteen 32-bit floating point 
            values, specifying the tile-range for each texture layer.&nbsp; This 
            is stored as the reciprocal (1/X) of the value that appears in 
            ZeroEdit.&nbsp; This value affects the scale of the texture applied 
            to each grid (default is 0.3125, or 1/32, which indicates the 
            texture spans 32 meters).<BR></TD></TR>
        <TR>
          <TD 
            style="FONT-FAMILY: courier new; VERTICAL-ALIGN: top"><SMALL>0x0054<BR></SMALL></TD>
          <TD 
            style="FONT-FAMILY: courier new; VERTICAL-ALIGN: top"><SMALL>byte[16]<BR></SMALL></TD>
          <TD style="TEXT-ALIGN: right; VERTICAL-ALIGN: top">16 <BR></TD>
          <TD style="VERTICAL-ALIGN: top">Sixteen 8-bit integers, specifying 
            the mapping for each texture layer.&nbsp; Setting this a value other 
            than 0 changes the way the texture is applied to the 
        terrain.<BR></TD></TR>
        <TR>
          <TD 
            style="FONT-FAMILY: courier new; VERTICAL-ALIGN: top"><SMALL>0x0064<BR></SMALL></TD>
          <TD 
            style="FONT-FAMILY: courier new; VERTICAL-ALIGN: top"><SMALL>byte[64]<BR></SMALL></TD>
          <TD style="TEXT-ALIGN: right; VERTICAL-ALIGN: top">64 <BR></TD>
          <TD style="VERTICAL-ALIGN: top">Block of 64 bytes, unknown purpose 
            and structure.&nbsp; (I suspect this was intended to store sixteen 
            32-bit floating point rotation values for each texture layer.&nbsp; 
            ZeroEdit uses the rotation values if you change them during an 
            editing session, but they don't get stored in the file!)<BR></TD></TR>
        <TR>
          <TD 
            style="FONT-FAMILY: courier new; VERTICAL-ALIGN: top"><SMALL>0x00A4<BR></SMALL></TD>
          <TD 
            style="FONT-FAMILY: courier new; VERTICAL-ALIGN: top"><SMALL>float<BR></SMALL></TD>
          <TD style="TEXT-ALIGN: right; VERTICAL-ALIGN: top">4 <BR></TD>
          <TD style="VERTICAL-ALIGN: top">32-bit floating point number, 
            specifying the map scale for terrain height.&nbsp; During the munge 
            process, all terrain height values are multiplied by this.&nbsp; 
            ZeroEditor sets this to 0.01 by default.<BR></TD></TR>
        <TR>
          <TD 
            style="FONT-FAMILY: courier new; VERTICAL-ALIGN: top"><SMALL>0x00A8<BR></SMALL></TD>
          <TD 
            style="FONT-FAMILY: courier new; VERTICAL-ALIGN: top"><SMALL>float<BR></SMALL></TD>
          <TD style="TEXT-ALIGN: right; VERTICAL-ALIGN: top">4 <BR></TD>
          <TD style="VERTICAL-ALIGN: top">32-bit floating point number, 
            specifying the map scale for each grid (in both the X and Y 
            directions).&nbsp; ZeroEditor sets this to 8.0 by default.<BR></TD></TR>
        <TR>
          <TD 
            style="FONT-FAMILY: courier new; VERTICAL-ALIGN: top"><SMALL>0x00AC<BR></SMALL></TD>
          <TD 
            style="FONT-FAMILY: courier new; VERTICAL-ALIGN: top"><SMALL>int<BR></SMALL></TD>
          <TD style="TEXT-ALIGN: right; VERTICAL-ALIGN: top">4 <BR></TD>
          <TD style="VERTICAL-ALIGN: top">32-bit integer, unknown 
          purpose.<BR></TD></TR>
        <TR>
          <TD 
            style="FONT-FAMILY: courier new; VERTICAL-ALIGN: top"><SMALL>0x00B0<BR></SMALL></TD>
          <TD 
            style="FONT-FAMILY: courier new; VERTICAL-ALIGN: top"><SMALL>int<BR></SMALL></TD>
          <TD style="TEXT-ALIGN: right; VERTICAL-ALIGN: top">4 <BR></TD>
          <TD style="VERTICAL-ALIGN: top">32-bit integer, specifying the full 
            map size stored by this file.&nbsp; This value will be termed the 
            <SPAN style="FONT-STYLE: italic">Total Grid Size</SPAN>.&nbsp; Note 
            that the actual map size will be clipped according to the Visible 
            Grid Co-ordinates.<BR></TD></TR>
        <TR>
          <TD 
            style="FONT-FAMILY: courier new; VERTICAL-ALIGN: top"><SMALL>0x00B4<BR></SMALL></TD>
          <TD 
            style="FONT-FAMILY: courier new; VERTICAL-ALIGN: top"><SMALL>int<BR></SMALL></TD>
          <TD style="TEXT-ALIGN: right; VERTICAL-ALIGN: top">4 <BR></TD>
          <TD style="VERTICAL-ALIGN: top">32-bit integer, unknown 
          purpose.<BR></TD></TR>
        <TR>
          <TD 
            style="FONT-FAMILY: courier new; VERTICAL-ALIGN: top"><SMALL>0x00B8<BR></SMALL></TD>
          <TD 
            style="FONT-FAMILY: courier new; VERTICAL-ALIGN: top"><SMALL>char[32][2][16]<BR></SMALL></TD>
          <TD style="TEXT-ALIGN: right; VERTICAL-ALIGN: top">1024 <BR></TD>
          <TD style="VERTICAL-ALIGN: top">Sixteen pairs of zero-terminated 
            strings.&nbsp; For each pair, the first string is the filename of 
            the main texture; and the second string is the filename of the 
            detail texture.<BR>These sixteen texture filenames make up the 
            Texture Layers.<BR></TD></TR>
        <TR>
          <TD 
            style="FONT-FAMILY: courier new; VERTICAL-ALIGN: top"><SMALL>0x04B8<BR></SMALL></TD>
          <TD 
            style="FONT-FAMILY: courier new; VERTICAL-ALIGN: top"><SMALL>byte[68]<BR></SMALL></TD>
          <TD style="TEXT-ALIGN: right; VERTICAL-ALIGN: top">68 <BR></TD>
          <TD style="VERTICAL-ALIGN: top">Block of 68 bytes, unknown purpose 
            and structure.&nbsp; (This may be an unused water layer 
        slot)<BR></TD></TR>
        <TR>
          <TD 
            style="FONT-FAMILY: courier new; VERTICAL-ALIGN: top"><SMALL>0x04FC<BR></SMALL></TD>
          <TD 
            style="FONT-FAMILY: courier new; VERTICAL-ALIGN: top"><SMALL>struct[15]:<BR>float[2],<BR>? 
            int[2] 
          ?,<BR>float[2],<BR>float[2],<BR>int,<BR>char[32]<BR></SMALL></TD>
          <TD style="TEXT-ALIGN: right; VERTICAL-ALIGN: top">1020 <BR></TD>
          <TD style="VERTICAL-ALIGN: top">Layers 1 through 15 Water 
            information, each block of 68 bytes organized as follows:<BR>Water 
            height value (this appears to be stored twice, as two 32-bit 
            floating point values with the same value).<BR>Unknown values (8 
            bytes that are always zero).<BR>U and V animation velocity (two 
            32-bit floating point values).<BR>U and V animation repeat values 
            (two 32-bit floating point values).<BR>ARGB color value (one 32-bit 
            integer).<BR>Zero-terminated string specifying the texture filename 
            (32 bytes).<BR></TD></TR>
        <TR>
          <TD 
            style="FONT-FAMILY: courier new; VERTICAL-ALIGN: top"><SMALL>0x08F8<BR></SMALL></TD>
          <TD 
            style="FONT-FAMILY: courier new; VERTICAL-ALIGN: top"><SMALL>byte[524] 
            <BR></SMALL></TD>
          <TD style="TEXT-ALIGN: right; VERTICAL-ALIGN: top">524 <BR></TD>
          <TD style="VERTICAL-ALIGN: top">Block of 524 bytes, unknown purpose 
            and structure.<BR></TD></TR></TBODY></TABLE><BR>The Visible Grid 
      Co-ordinates are used to resolve the data from the blocks that follow that 
      is to be munged.&nbsp; Think of these co-ordinates as being used to clip 
      the map surface, both for manipulating inside the editor, and for the 
      munging process.<BR>This data storage technique is useful if the map 
      creator decides to change the map size, or to shift the visible portion of 
      the map; while still maintaining all relevant terrain information outside 
      of the clipped area.<BR><BR></TD></TR></TBODY></TABLE><BR>The blocks of data 
that follow are organized into a two-dimensional array, indexed into the map 
grid.&nbsp; The size of these blocks are always some multiple of (Total Grid 
Size * Total Grid Size).<BR><BR>When a terrain is first loaded into ZeroEditor, 
the first row of data is the map edge found "behind" the camera.&nbsp; The first 
column of data is the map edge to camera-left.<BR><BR>
<TABLE style="TEXT-ALIGN: left; WIDTH: 100%" border=1 cellSpacing=0 
cellPadding=2>
  <TBODY>
  <TR>
    <TD 
      style="BACKGROUND-COLOR: rgb(239,239,239); VERTICAL-ALIGN: top"><BIG><SPAN 
      style="FONT-WEIGHT: bold">Terrain Height Block</SPAN></BIG><BR><BR>The 
      terrain height data always follows the header, and therefore always begins 
      at offset 0x00000B04.&nbsp; Each terrain height value is a signed 16-bit 
      integer.&nbsp; The total size of this block of data is (2 * Total Grid 
      Size * Total Grid Size).<BR><BR></TD></TR></TBODY></TABLE><BR>
<TABLE style="TEXT-ALIGN: left; WIDTH: 100%" border=1 cellSpacing=0 
cellPadding=2>
  <TBODY>
  <TR>
    <TD 
      style="BACKGROUND-COLOR: rgb(239,239,239); VERTICAL-ALIGN: top"><BIG><SPAN 
      style="FONT-WEIGHT: bold">Terrain Color Block</SPAN></BIG><BR><BR>Each 
      terrain color value is a 32-bit ARGB value.&nbsp; The total size of this 
      block of data is (4 * Total Grid Size * Total Grid 
  Size).<BR><BR></TD></TR></TBODY></TABLE><BR>
<TABLE style="TEXT-ALIGN: left; WIDTH: 100%" border=1 cellSpacing=0 
cellPadding=2>
  <TBODY>
  <TR>
    <TD style="BACKGROUND-COLOR: rgb(239,239,239); VERTICAL-ALIGN: top"><BIG 
      style="FONT-WEIGHT: bold">Additional Color Block</BIG><BR><BR>There 
      appears to be a second set of color data.&nbsp; I'm unclear as to the 
      purpose of this data.&nbsp; It is organized the same as the Terrain 
      Color.<BR><BR></TD></TR></TBODY></TABLE><BR>
<TABLE style="TEXT-ALIGN: left; WIDTH: 100%" border=1 cellSpacing=0 
cellPadding=2>
  <TBODY>
  <TR>
    <TD style="BACKGROUND-COLOR: rgb(239,239,239); VERTICAL-ALIGN: top"><BIG 
      style="FONT-WEIGHT: bold">Terrain Texture Block</BIG><BR><BR>Each group of 
      terrain texture values for a grid location consists of 16 texture alpha 
      values.&nbsp; Each alpha value corresponds to the same texture 
      layer.&nbsp; The total size of this block of data is (16 * Total Grid Size 
      * Total Grid Size).<BR><BR></TD></TR></TBODY></TABLE><BR>
<TABLE style="TEXT-ALIGN: left; BACKGROUND-COLOR: rgb(239,239,239); WIDTH: 100%" 
border=1 cellSpacing=0 cellPadding=2>
  <TBODY>
  <TR>
    <TD style="VERTICAL-ALIGN: top"><BIG style="FONT-WEIGHT: bold">Terrain 
      Water Block</BIG><BR><BR>I'm unclear as to the method being used to store 
      this data.&nbsp; In ZeroEditor, there are 15 water layers available, 
      though I suspect the data here could actually accommodate 16 layers.&nbsp; 
      The total size of this block of data is (Total Grid Size * Total Grid Size 
      / 2).<BR><BR></TD></TR></TBODY></TABLE><BR>
<TABLE style="TEXT-ALIGN: left; WIDTH: 100%" border=1 cellSpacing=0 
cellPadding=2>
  <TBODY>
  <TR>
    <TD 
      style="BACKGROUND-COLOR: rgb(239,239,239); VERTICAL-ALIGN: top"><BIG><SPAN 
      style="FONT-WEIGHT: bold">Terrain Foliage Block</SPAN></BIG><BR><BR>In 
      ZeroEditor, there are 4 foliage layers.&nbsp; The data here is stored in a 
      bitwise manner, where each 4 bits (half-byte) indicates which layers are 
      active for the corresponding grid location.&nbsp; The total size of this 
      block of data is (Total Grid Size * Total Grid Size / 
  2).<BR><BR></TD></TR></TBODY></TABLE><BR></BODY></HTML>
